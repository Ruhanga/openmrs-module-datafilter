[
    {
        "name": "datafilter_locationBasedVisitFilter",
        "targetClasses": ["org.openmrs.Visit"],
        "condition": "patient_id IN (
                        SELECT DISTINCT datafilter_ebm.entity_identifier FROM datafilter_entity_basis_map datafilter_ebm
                            WHERE datafilter_ebm.entity_type = 'org.openmrs.Patient'
                            AND datafilter_ebm.basis_type = 'org.openmrs.Location'
                            AND datafilter_ebm.basis_identifier IN (:basisIds))",
        "parameters": [
            {
                "name": "basisIds",
                "type": "string"
            }
        ]
    },
    {
        "name": "datafilter_locationBasedEncounterFilter",
        "targetClasses": ["org.openmrs.Encounter"],
        "condition": "patient_id IN (
                        SELECT DISTINCT datafilter_ebm.entity_identifier FROM datafilter_entity_basis_map datafilter_ebm
                            WHERE datafilter_ebm.entity_type = 'org.openmrs.Patient'
                            AND datafilter_ebm.basis_type = 'org.openmrs.Location'
                            AND datafilter_ebm.basis_identifier IN (:basisIds))",
        "parameters": [
            {
                "name": "basisIds",
                "type": "string"
            }
        ]
    },
    {
        "name": "datafilter_locationBasedObsFilter",
        "targetClasses": ["org.openmrs.Obs"],
        "condition": "person_id IN (
                        SELECT DISTINCT datafilter_ebm.entity_identifier FROM datafilter_entity_basis_map datafilter_ebm
                            WHERE datafilter_ebm.entity_type = 'org.openmrs.Patient'
                            AND datafilter_ebm.basis_type = 'org.openmrs.Location'
                            AND datafilter_ebm.basis_identifier IN (:basisIds))",
        "parameters": [
            {
                "name": "basisIds",
                "type": "string"
            }
        ]
    },
    {
        "name": "datafilter_locationBasedPatientFilter",
        "targetClasses": ["org.openmrs.Person"],
        "condition": "(person_id NOT IN (SELECT datafilter_ebm1.patient_id FROM patient datafilter_ebm1)
                        OR (person_id IN (
                            SELECT DISTINCT datafilter_ebm.entity_identifier FROM datafilter_entity_basis_map datafilter_ebm
                                WHERE datafilter_ebm.entity_type = 'org.openmrs.Patient'
                                AND datafilter_ebm.basis_type = 'org.openmrs.Location'
                                AND datafilter_ebm.basis_identifier IN (:basisIds))))",
        "parameters": [
            {
                "name": "basisIds",
                "type": "string"
            }
        ]
    },
    {
        "name": "datafilter_locationBasedUserFilter",
        "targetClasses": ["org.openmrs.User"],
        "condition": "user_id IN (
                        SELECT DISTINCT datafilter_ebm.entity_identifier FROM datafilter_entity_basis_map datafilter_ebm
                            WHERE datafilter_ebm.entity_type = 'org.openmrs.User'
                            AND datafilter_ebm.basis_type = 'org.openmrs.Location'
                            AND datafilter_ebm.basis_identifier IN (:basisIds))",
        "parameters": [
            {
                "name": "basisIds",
                "type": "string"
            }
        ]
    },
    {
        "name": "datafilter_locationBasedProviderFilter",
        "targetClasses": ["org.openmrs.Provider"],
        "condition": "(person_id = (:authenticatedPersonId)
                        OR person_id IN (
                            SELECT DISTINCT datafilter_u.person_id FROM users datafilter_u
                                WHERE datafilter_u.user_id IN (
                                    SELECT DISTINCT datafilter_ebm.entity_identifier FROM datafilter_entity_basis_map datafilter_ebm
                                        WHERE datafilter_ebm.entity_type = 'org.openmrs.User'
                                        AND datafilter_ebm.basis_type = 'org.openmrs.Location'
                                        AND datafilter_ebm.basis_identifier IN (:basisIds)
                                )
                        )
                       )",
        "parameters": [
            {
                "name": "authenticatedPersonId",
                "type": "integer"
            },
            {
                "name": "basisIds",
                "type": "string"
            }
        ]
    },
    {
        "name": "datafilter_locationFilter",
        "targetClasses": ["org.openmrs.Location"],
        "condition": "location_id IN (:basisIds)",
        "parameters": [
            {
                "name": "basisIds",
                "type": "string"
            }
        ]
    }
]
